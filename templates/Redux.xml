<templateSet group="Redux">
  <template name="ra" value="export const $NAME$ = () =&gt; ({&#10;  type: $UPNAME$,&#10;})" description="" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="UPNAME" expression="capitalizeAndUnderscore(NAME)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rca" value="case $NAME$:&#10;  return [$END$]" description="" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="clipboard()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rrc" value="case $START$:&#10;  return { ...state, $END$ }" description="Redux reducer case" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="link" value="import { Link } from 'react-router-dom'" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="conn" value="import { connect } from &quot;react-redux&quot;" description="Import connect" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rap" value="export const $NAME$ = $DATA$ =&gt; ({&#10;  type: $UPNAME$,&#10;  payload: { $DATA$ },&#10;})" description="" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="DATA" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="UPNAME" expression="capitalizeAndUnderscore(NAME)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ms" value="const mapStateToProps = state =&gt; ({&#10;  $PROP$: $PROP$Selector(state),&#10;})" description="mapStateToProps" toReformat="false" toShortenFQNames="true">
    <variable name="PROP" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rad" value="export const $NAME$ = () =&gt; dispatch =&gt; {&#10;  dispatch($NAME$Success())&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rco" value="case $NAME$:&#10;  return state.$END$" description="Redux case with state as object" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="clipboard()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="dm" value="$FOO$: () =&gt; dispatch($FOO$($END$)),&#10;" description="mapDispatchToProps" toReformat="false" toShortenFQNames="true">
    <variable name="FOO" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="md" value="const mapDispatchToProps = (dispatch) =&gt; ({&#10;    $FOO$: () =&gt; dispatch($FOO$($END$)),&#10;})" description="mapDispatchToProps" toReformat="false" toShortenFQNames="true">
    <variable name="FOO" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="msp" value="const mapStateToProps = (state, props) =&gt; ({&#10;  $PROP$: $END$,&#10;})" description="mapStateToProps" toReformat="false" toShortenFQNames="true">
    <variable name="PROP" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="duck" value="/**&#10; * Constants&#10; **/&#10; &#10;export const ACTION = '$MODULE$/ACTION'&#10;&#10;&#10;/**&#10; * Reducer&#10; **/&#10;&#10;const initialState = {&#10;&#10;}&#10;&#10;export default function(state = initialState, action) {&#10;  const { type, payload } = action&#10;&#10;  switch (type) {&#10;    &#10;&#10;    default:&#10;      return state&#10;  }&#10;}&#10;&#10;/**&#10; * Action Creators&#10; **/&#10;&#10;&#10;" description="duck" toReformat="false" toShortenFQNames="true">
    <variable name="MODULE" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="nlink" value="import { NavLink } from 'react-router-dom'" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>