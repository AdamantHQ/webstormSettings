<templateSet group="ReactJS">
  <template name="rcls" value="import React, { Component } from &quot;react&quot;;&#10;import {} from &quot;prop-types&quot;;&#10;import &quot;./$CLASSNAME$.scss&quot;;&#10;&#10;export default class $COMPONENT$ extends Component {&#10;  static propTypes = {&#10;    //myprop: PropTypes.string.isRequired,&#10;  };&#10;  &#10;  render() {&#10;    return (&#10;      &lt;div className=&quot;$CLASSNAME$&quot;&gt;$END$&lt;/div&gt;&#10;    );&#10;  }&#10;}&#10;" description="React: Create a React ES2015 class" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cdm" value="componentDidMount() {&#10;  $END$&#10;}&#10;" description="React: componentDidMount" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cdm5" value="componentDidMount: function() {&#10;  $END$&#10;},&#10;" description="React: componentDidMount" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cdu" value="componentDidUpdate(prevProps, prevState, prevContext) {&#10;  $END$&#10;}&#10;" description="React: componentDidUpdate" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cdu5" value="componentDidUpdate: function(prevProps, prevState, prevContext) {&#10;  $END$&#10;},&#10;" description="React: componentDidUpdate" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cwm" value="componentWillMount() {&#10;  $END$&#10;}&#10;" description="React: componentWillMount" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cwr" value="componentWillReceiveProps(nextProps, nextContext) {&#10;  $END$&#10;}&#10;" description="React: componentWillReceiveProps" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cwu" value="componentWillUpdate(nextProps, nextState, nextContext) {&#10;  $END$&#10;}&#10;" description="React: componentWillUpdate" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cwum" value="componentWillUnmount() {&#10;  $END$&#10;}&#10;" description="React: componentWillUnmount" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="dnp" value="$START$.displayName = &quot;$END$&quot;;" description="React: displayName as a property" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="fdn" value="findDOMNode($END$);" description="React: findDOMNode" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rfdn" value="ReactDOM.findDOMNode($END$);" description="React: ReactDOM.findDOMNode" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="gdp" value="getDefaultProps() {&#10;  return {&#10;    $END$&#10;  };&#10;}&#10;" description="React: getDefaultProps" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="gis" value="getInitialState() {&#10;  return {&#10;    $START$: $END$&#10;  };&#10;}&#10;" description="React: getInitialState" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="props" value="this.props" description="React: this.props" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="pts" value="propTypes: {&#10;  $START$: PropTypes.$END$,&#10;},&#10;" description="React: propTypes" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="pt" value="$START$: PropTypes.$TYPE$.isRequired,$END$" description="React: PropTypes." toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ren" value="render() {&#10;  return (&#10;    &lt;div&gt;$END$&lt;/div&gt;&#10;  );&#10;}&#10;" description="React: render()" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="scu" value="shouldComponentUpdate(nextProps, nextState, nextContext) {&#10;  $END$&#10;}&#10;" description="React: shouldComponentUpdate" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="scu5" value="shouldComponentUpdate: function(nextProps, nextState, nextContext) {&#10;  $END$&#10;},&#10;" description="React: shouldComponentUpdate" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sst" value="this.setState({ $START$: $END$ });" description="React: this.setState" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="state" value="state = {&#10;  $END$&#10;};" description="React: state" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cct" value="childContextTypes: {&#10;  $START$: PropTypes.$END$,&#10;},&#10;" description="React: childContextTypes" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="gcc" value="getChildContext() {&#10;  return {&#10;    $START$: $END$&#10;  };&#10;}&#10;" description="React: getChildContext" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sdn" value="static displayName = &quot;$END$&quot;;" description="React: static displayName" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="spt" value="static propTypes = {&#10;  $START$: PropTypes.$END$,&#10;};&#10;" description="React: static propTypes" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sdp" value="static defaultProps = {&#10;  $START$: $END$,&#10;};&#10;" description="React: static defaultProps" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sct" value="static contextTypes = {&#10;  $START$: PropTypes.$END$,&#10;};&#10;" description="React: static contextTypes" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="scct" value="static childContextTypes = {&#10;  $START$: PropTypes.$END$,&#10;};&#10;" description="React: static childContextTypes" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tsn" value="transitionName=&quot;$END$&quot;" description="React: transitionName" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tsa" value="transitionAppear={$END$}" description="React: transitionAppear" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tse" value="transitionEnter={$END$}" description="React: transitionEnter" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tsl" value="transitionLeave={$END$}" description="React: transitionLeave" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tset" value="transitionEnterTimeout={$END$}" description="React: transitionEnterTimeout" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tslt" value="transitionLeaveTimeout={$END$}" description="React: transitionLeaveTimeout" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tsat" value="transitionAppearTimeout={$END$}" description="React: transitionAppearTimeout" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="oncp" value="onCopy={$END$}" description="React: onCopy" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onct" value="onCut={$END$}" description="React: onCut" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onpt" value="onPaste={$END$}" description="React: onPaste" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="oncpse" value="onCompositionEnd={$END$}" description="React: onCompositionEnd" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="oncpss" value="onCompositionStart={$END$}" description="React: onCompositionStart" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="oncpsu" value="onCompositionUpdate={$END$}" description="React: onCompositionUpdate" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onkd" value="onKeyDown={$END$}" description="React: onKeyDown" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onps" value="onKeyPress={$END$}" description="React: onKeyPress" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onku" value="onKeyUp={$END$}" description="React: onKeyUp" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onfs" value="onFocus={$END$}" description="React: onFocus" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onbl" value="onBlur={$END$}" description="React: onBlur" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="oncg" value="onChange={$END$}" description="React: onChange" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onip" value="onInput={$END$}" description="React: onInput" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onsb" value="onSubmit={$END$}" description="React: onSubmit" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onc" value="onClick={$END$}" description="React: onClick" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="oncm" value="onContextMenu={$END$}" description="React: onContextMenu" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ondc" value="onDurationChange={$END$}" description="React: onDurationChange" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ondg" value="onDrag={$END$}" description="React: onDrag" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ondge" value="onDragEnd={$END$}" description="React: onDragEnd" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ondgetr" value="onDragEnter={$END$}" description="React: onDragEnter" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ondget" value="onDragExit={$END$}" description="React: onDragExit" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ondgl" value="onDragLeave={$END$}" description="React: onDragLeave" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ondgo" value="onDragOver={$END$}" description="React: onDragOver" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ondgst" value="onDragStart={$END$}" description="React: onDragStart" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ondp" value="onDrop={$END$}" description="React: onDrop" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onmd" value="onMouseDown={$END$}" description="React: onMouseDown" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onme" value="onMouseEnter={$END$}" description="React: onMouseEnter" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onml" value="onMouseLeave={$END$}" description="React: onMouseLeave" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onmm" value="onMouseMove={$END$}" description="React: onMouseMove" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onmot" value="onMouseOut={$END$}" description="React: onMouseOut" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onmov" value="onMouseOver={$END$}" description="React: onMouseOver" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onmu" value="onMouseUp={$END$}" description="React: onMouseUp" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onsl" value="onScroll={$END$}" description="React: onScroll" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ontc" value="onTouchCancel={$END$}" description="React: onTouchCancel" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onte" value="onTouchEnd={$END$}" description="React: onTouchEnd" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ontm" value="onTouchMove={$END$}" description="React: onTouchMove" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onts" value="onTouchStart={$END$}" description="React: onTouchStart" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onwl" value="onWheel={$END$}" description="React: onWheel" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="oncpl" value="onCanPlay={$END$}" description="React: onCanPlay" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="oncpt" value="onCanPlayThrough={$END$}" description="React: onCanPlayThrough" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onempt" value="onEmptied={$END$}" description="React: onEmptied" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onekpt" value="onEncrypted={$END$}" description="React: onEncrypted" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onend" value="onEnded={$END$}" description="React: onEnded" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onldd" value="onLoadedData={$END$}" description="React: onLoadedData" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onldmd" value="onLoadedMetadata={$END$}" description="React: onLoadedMetadata" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onls" value="onLoadStart={$END$}" description="React: onLoadStart" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onpaus" value="onPause={$END$}" description="React: onPause" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="opl" value="onPlay={$END$}" description="React: onPlay" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onplg" value="onPlaying={$END$}" description="React: onPlaying" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onpgs" value="onProgress={$END$}" description="React: onProgress" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onrc" value="onRateChange={$END$}" description="React: onRateChange" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onsked" value="onSeeked={$END$}" description="React: onSeeked" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onskin" value="onSeeking={$END$}" description="React: onSeeking" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onstd" value="onStalled={$END$}" description="React: onStalled" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onsupd" value="onSuspend={$END$}" description="React: onSuspend" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ontu" value="onTimeUpdate={$END$}" description="React: onTimeUpdate" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onvc" value="onVolumeChange={$END$}" description="React: onVolumeChange" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onwt" value="onWaiting={$END$}" description="React: onWaiting" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onld" value="onLoad={$END$}" description="React: onLoad" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onerr" value="onError={$END$}" description="React: onError" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onas" value="onAnimationStart={$END$}" description="React: onAnimationStart" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onai" value="onAnimationIteration={$END$}" description="React: onAnimationIteration" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ontse" value="onTransitionEnd={$END$}" description="React: onTransitionEnd" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rsl" value="import React from &quot;react&quot;;&#10;import {} from &quot;prop-types&quot;;&#10;import &quot;./$CLASSNAME$.scss&quot;;&#10;&#10;const $COMPONENT$ = () =&gt; (&#10;  &lt;div className=&quot;$CLASSNAME$&quot;&gt;&#10;    $END$&#10;  &lt;/div&gt;&#10;);&#10;&#10;&#10;$COMPONENT$.propTypes = {};&#10;&#10;export default $COMPONENT$;&#10;" description="React: create React Stateless Component" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rsle" value="import React from &quot;react&quot;;&#10;import {} from &quot;prop-types&quot;;&#10;import &quot;./$CLASSNAME$.scss&quot;;&#10;&#10;const $COMPONENT$ = () =&gt; {&#10;  $START$&#10;  return (&#10;    &lt;div className=&quot;$CLASSNAME$&quot;&gt;&#10;      $END$&#10;    &lt;/div&gt;&#10;  );&#10;};&#10;&#10;&#10;$COMPONENT$.propTypes = {};&#10;&#10;export default $COMPONENT$;&#10;" description="React: create React Stateless Component extended" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="im" value="import $FILE$ from &quot;$PATH$&quot;;" description="React: import" toReformat="false" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FILE" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="imd" value="import { $END$ } from &quot;$START$&quot;;" description="React: destructured import" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="imc" value="import $EXPORT$ from &quot;./$CHILD$/$CHILD$&quot;;" description="React: import children" toReformat="false" toShortenFQNames="true">
    <variable name="CHILD" expression="jsClassName()" defaultValue="" alwaysStopAt="true" />
    <variable name="EXPORT" expression="" defaultValue="CHILD" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rm" value="$METHOD$ = () =&gt; {&#10;  $END$&#10;};&#10;" description="React: method" toReformat="true" toShortenFQNames="true">
    <variable name="METHOD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sstt" value="this.setState(state =&gt; ({&#10;  $FLAG$: !state.$FLAG$,&#10;}));&#10;" description="React: this.setState" toReformat="false" toShortenFQNames="true">
    <variable name="FLAG" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rslp" value="import React from &quot;react&quot;;&#10;import { string } from &quot;prop-types&quot;;&#10;import &quot;./$CLASSNAME$.scss&quot;;&#10;&#10;const $COMPONENT$ = ({parentClass}) =&gt; {&#10;  return (&#10;    &lt;div className={`$CLASSNAME$ ${parentClass}`}&gt;&#10;      $END$&#10;    &lt;/div&gt;&#10;  );&#10;};&#10;&#10;&#10;$COMPONENT$.propTypes = {&#10;  parentClass: string,&#10;};&#10;&#10;export default $COMPONENT$;&#10;&#10;&#10;" description="React: create React Stateless Component extended" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ims" value="import &quot;./$NAME$.scss&quot;;" description="React: import scss file" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcon" value="import React, { Component } from &quot;react&quot;;&#10;import {} from &quot;prop-types&quot;;&#10;import &quot;./$CLASSNAME$.scss&quot;;&#10;&#10;import { connect } from &quot;react-redux&quot;;&#10;&#10;const mapStateToProps = (state) =&gt; {&#10;  return {&#10;    &#10;  };&#10;};&#10;&#10;const mapDispatchToProps = (dispatch) =&gt; {&#10;  return {&#10;    &#10;  };&#10;};&#10;&#10;@connect(mapStateToProps, mapDispatchToProps)&#10;export default class $COMPONENT$ extends Component {&#10;  static propTypes = {&#10;    //myprop: PropTypes.string.isRequired,&#10;  };&#10;  &#10;  render() {&#10;    return (&#10;      &lt;div className=&quot;$CLASSNAME$&quot;&gt;$END$&lt;/div&gt;&#10;    );&#10;  }&#10;}&#10;" description="React: Create a React ES2015 class" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rconp" value="import React, { Component } from &quot;react&quot;;&#10;import PropTypes from &quot;prop-types&quot;;&#10;import &quot;./$CLASSNAME$.scss&quot;;&#10;&#10;import { connect } from &quot;react-redux&quot;;&#10;&#10;function mapStateToProps(state, ownProps) {&#10;&#10;}&#10;&#10;function mapDispatchToProps(dispatch) {&#10;&#10;}&#10;&#10;@connect(mapStateToProps, mapDispatchToProps)&#10;export default class $COMPONENT$ extends Component {&#10;  static propTypes = {&#10;    parentClass: PropTypes.string,&#10;  };&#10;  &#10;  render() {&#10;  const { parentClass } = this.props;&#10;    return (&#10;      &lt;div className={`$CLASSNAME$ ${parentClass}`}&gt;$END$&lt;/div&gt;&#10;    );&#10;  }&#10;}&#10;" description="React: Create a React ES2015 class with parent class" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sbl" value="span.$CLASS$__" description="New span with className from file name" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="HTML" value="true" />
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="cfn" value="&quot;$CLASS$__$END$&quot;" description="className from file name" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="dbl" value="div.$CLASS$__" description="New span with className from file name" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="HTML" value="true" />
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="cs" value="$CLASS$" description="ClassName string" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="pta" value="$START$: PropTypes.array.isRequired,$END$" description="React: PropTypes.array" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="csb" value="$CLASS$__" description="ClassName string with element underscores" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="oto" value="({$START$}) =&gt; ({$END$})" description="Arrow function that takes object and returns object" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rslpc" value="import React from &quot;react&quot;;&#10;import { string } from &quot;prop-types&quot;;&#10;import &quot;./$CLASSNAME$.scss&quot;;&#10;import { connect } from &quot;react-redux&quot;;&#10;&#10;const $COMPONENT$ = ({parentClass}) =&gt; {&#10;  return (&#10;    &lt;div className={`$CLASSNAME$ ${parentClass}`}&gt;&#10;      $END$&#10;    &lt;/div&gt;&#10;  );&#10;};&#10;&#10;&#10;$COMPONENT$.propTypes = {&#10;  parentClass: string,&#10;};&#10;&#10;const mapStateToProps = ({}) =&gt; ({});&#10;&#10;const mapDispatchToProps({}) =&gt; ({});&#10;&#10;&#10;export default connect(mapStateToProps, mapDispatchToProps)($COMPONENT$);&#10;&#10;&#10;" description="React: create React Stateless Component extended" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cspc" value="`${parentClass} $CLASS$`" description="ClassName string" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cnd" value="const { $END$ } = $START$;" description="Destructured assignment" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cnds" value="const { $END$ } = this.state;" description="Destructured assignment from this.state" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cndp" value="const { $END$ } = this.props;" description="Destructured assignment from this.props" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ptu" value="$START$: PropTypes.$TYPE$,$END$" description="React: PropTypes. without required" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cncn" value="const $START$ = classNames(&#10;  &quot;$CLASS$&quot;, &#10;  $CONDITION$ &amp;&amp; &quot;$CLASS$--$CONDITION$&quot;&#10;);" description="classNames library" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <variable name="CONDITION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cncnp" value="const $START$ = classNames(&#10;  &quot;$CLASS$&quot;, &#10;  parentClass,&#10;  $CONDITION$ &amp;&amp; &quot;$CLASS$--$CONDITION$&quot;&#10;);" description="classNames library" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <variable name="CONDITION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cncnb" value="const $ELEMENT$Class = classNames(&quot;$CLASS$__$ELEMENT$&quot;, {&#10;  &quot;$CLASS$__$ELEMENT$--$PREFIX$&quot;: $CONDITION$,&#10;});" description="classNames library" toReformat="false" toShortenFQNames="true">
    <variable name="ELEMENT" expression="lowercaseAndDash()" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <variable name="PREFIX" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CONDITION" expression="PREFIX" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rslc" value="import React from &quot;react&quot;;&#10;import {} from &quot;prop-types&quot;;&#10;import &quot;./$CLASSNAME$.scss&quot;;&#10;import { connect } from &quot;react-redux&quot;;&#10;&#10;const $COMPONENT$ = () =&gt; (&#10;  &lt;div className=&quot;$CLASSNAME$&quot;&gt;&#10;    $END$&#10;  &lt;/div&gt;&#10;);&#10;&#10;&#10;$COMPONENT$.propTypes = {};&#10;&#10;const mapStateToProps = (state) =&gt; ({&#10;  $PROP$: get$UP$(state),&#10;});&#10;&#10;export default connect(mapStateToProps)($COMPONENT$);&#10;" description="React: create React Stateless Component" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="false" />
    <variable name="PROP" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="UP" expression="capitalize(PROP)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bl" value="$BLOCK$" description="ClassName string" toReformat="false" toShortenFQNames="true">
    <variable name="BLOCK" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="eaf" value="export const $NAME$ = ($ARGS$) =&gt; $RETURN$;" description="Export array function" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="RETURN" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="lr" value="console.log(&quot;$COMPONENT$ is rendering&quot;);" description="Console.log for displaying rendering information" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cls" value="console.log(&quot;---$START$---&quot;);" description="Console.log(string)" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="clr" value="console.log(&quot;----------$COMPONENT$ is rendering---------&quot;);" description="Console.log for displaying rendering information" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cnb" value="className=&quot;$BLOCK$__$END$&quot;" description="className" toReformat="false" toShortenFQNames="true">
    <variable name="BLOCK" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ex" value="export const $CONST$ = $END$" description="Export const" toReformat="false" toShortenFQNames="true">
    <variable name="CONST" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sto" value="state =&gt; ({ $END$ })" description="Arrow function that takes object and returns object" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rclc" value="import React, { Component } from &quot;react&quot;;&#10;import {} from &quot;prop-types&quot;;&#10;import &quot;./$CLASSNAME$.scss&quot;;&#10;import { connect } from &quot;react-redux&quot;;&#10;&#10;const mapStateToProps = () =&gt; {&#10;  $PROP$&#10;}&#10;&#10;@connect(mapStateToProps)&#10;export default class $COMPONENT$ extends Component {&#10;  static propTypes = {&#10;    //myprop: PropTypes.string.isRequired,&#10;  };&#10;  &#10;  render() {&#10;    return (&#10;      &lt;div className=&quot;$CLASSNAME$&quot;&gt;$END$&lt;/div&gt;&#10;    );&#10;  }&#10;}&#10;" description="React: Create a React ES2015 class" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="PROP" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="clg" value="console.log($END$);" description="Console.log()" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cm" value="/**&#10; * $START$&#10; **/" description="Comment" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ptsl" value="$COMP$.propTypes = { &#10;  $START$: object.$END$&#10;};&#10;" description="React: propTypes for stateless component" toReformat="false" toShortenFQNames="true">
    <variable name="COMP" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>