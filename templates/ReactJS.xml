<templateSet group="ReactJS">
  <template name="rcls" value="import React, { Component } from 'react'&#10;import T from 'prop-types'&#10;import './$CLASSNAME$.scss'&#10;&#10;export default class $COMPONENT$ extends Component {&#10;  static propTypes = {&#10;    &#10;  }&#10;  &#10;  render() {&#10;    return (&#10;      &lt;div className=&quot;$CLASSNAME$&quot;&gt;$END$&lt;/div&gt;&#10;    )&#10;  }&#10;}&#10;" description="React: Create a React ES2015 class" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cdm" value="componentDidMount() {&#10;  $END$&#10;}&#10;" description="React: componentDidMount" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cdu" value="componentDidUpdate(prevProps, prevState, prevContext) {&#10;  $END$&#10;}&#10;" description="React: componentDidUpdate" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cwm" value="componentWillMount() {&#10;  $END$&#10;}&#10;" description="React: componentWillMount" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cwr" value="componentWillReceiveProps(nextProps, nextContext) {&#10;  $END$&#10;}&#10;" description="React: componentWillReceiveProps" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cwu" value="componentWillUpdate(nextProps, nextState, nextContext) {&#10;  $END$&#10;}&#10;" description="React: componentWillUpdate" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cwum" value="componentWillUnmount() {&#10;  $END$&#10;}&#10;" description="React: componentWillUnmount" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="fdn" value="findDOMNode($END$)" description="React: findDOMNode" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="pr" value="this.props" description="React: this.props" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="pts" value="static propTypes: {&#10;  $START$: T.$END$,&#10;};&#10;" description="React: propTypes" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="pt" value="$START$: T.$TYPE$," description="React: PropTypes." toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ren" value="render() {&#10;  return (&#10;    &lt;div&gt;$END$&lt;/div&gt;&#10;  );&#10;}&#10;" description="React: render()" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="scu" value="shouldComponentUpdate(nextProps, nextState, nextContext) {&#10;  $END$&#10;}&#10;" description="React: shouldComponentUpdate" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sst" value="this.setState({ $START$: $END$ })" description="React: this.setState" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="state" value="state = {&#10;  $END$&#10;}" description="React: state" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sdn" value="static displayName = '$END$'" description="React: static displayName" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="spt" value="static propTypes = {&#10;  $START$: T.$END$,&#10;}&#10;" description="React: static propTypes" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sdp" value="static defaultProps = {&#10;  $START$: $END$,&#10;}&#10;" description="React: static defaultProps" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onps" value="onKeyPress={$END$}" description="React: onKeyPress" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onbl" value="onBlur={$END$}" description="React: onBlur" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="oncg" value="onChange={$END$}" description="React: onChange" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onsb" value="onSubmit={$END$}" description="React: onSubmit" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onc" value="onClick={$END$}" description="React: onClick" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onmd" value="onMouseDown={$END$}" description="React: onMouseDown" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onme" value="onMouseEnter={$END$}" description="React: onMouseEnter" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onml" value="onMouseLeave={$END$}" description="React: onMouseLeave" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onmm" value="onMouseMove={$END$}" description="React: onMouseMove" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onmot" value="onMouseOut={$END$}" description="React: onMouseOut" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onmov" value="onMouseOver={$END$}" description="React: onMouseOver" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onmu" value="onMouseUp={$END$}" description="React: onMouseUp" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onsl" value="onScroll={$END$}" description="React: onScroll" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="onwl" value="onWheel={$END$}" description="React: onWheel" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rsl" value="import React from 'react'&#10;import T from 'prop-types'&#10;import './$CLASSNAME$.scss'&#10;&#10;const $COMPONENT$ = () =&gt; (&#10;  &lt;div className=&quot;$CLASSNAME$&quot;&gt;&#10;    $END$&#10;  &lt;/div&gt;&#10;)&#10;&#10;&#10;$COMPONENT$.propTypes = {&#10;  &#10;}&#10;&#10;export default $COMPONENT$&#10;" description="React: create React Stateless Component" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="im" value="import $FILE$ from '$PATH$'" description="React: import" toReformat="false" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FILE" expression="$PATH$" defaultValue="PATH" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="imd" value="import { $END$ } from '$START$'" description="React: destructured import" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="imc" value="import $EXPORT$ from './$CHILD$'" description="React: import children" toReformat="false" toShortenFQNames="true">
    <variable name="CHILD" expression="jsClassName()" defaultValue="" alwaysStopAt="true" />
    <variable name="EXPORT" expression="" defaultValue="CHILD" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rm" value="$METHOD$ = () =&gt; {&#10;  $END$&#10;}&#10;" description="React: method" toReformat="true" toShortenFQNames="true">
    <variable name="METHOD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sstt" value="this.setState(state =&gt; ({&#10;  $FLAG$: !state.$FLAG$,&#10;}))&#10;" description="React: this.setState" toReformat="false" toShortenFQNames="true">
    <variable name="FLAG" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ims" value="import './$NAME$.scss'" description="React: import scss file" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcon" value="import React, { Component } from 'react'&#10;import T from 'prop-types'&#10;import './$CLASSNAME$.scss'&#10;&#10;import { connect } from 'react-redux'&#10;&#10;const mapStateToProps = (state) =&gt; {&#10;  return {&#10;    &#10;  }&#10;}&#10;&#10;const mapDispatchToProps = (dispatch) =&gt; {&#10;  return {&#10;    &#10;  }&#10;}&#10;&#10;@connect(mapStateToProps, mapDispatchToProps)&#10;export default class $COMPONENT$ extends Component {&#10;  static propTypes = {&#10;    &#10;  }&#10;  &#10;  render() {&#10;    return (&#10;      &lt;div className=&quot;$CLASSNAME$&quot;&gt;$END$&lt;/div&gt;&#10;    )&#10;  }&#10;}&#10;" description="React: Create a React ES2015 class" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sbl" value="span.$CLASS$__" description="New span with className from file name" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="HTML" value="true" />
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="dbl" value="div.$CLASS$__" description="New span with className from file name" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="HTML" value="true" />
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="cs" value="$CLASS$" description="ClassName string" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="pta" value="$START$: PropTypes.array.isRequired,$END$" description="React: PropTypes.array" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="csb" value="$CLASS$__" description="ClassName string with element underscores" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="oto" value="({ $START$ }) =&gt; ({ $END$ })" description="Arrow function that takes object and returns object" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cnds" value="const { $END$ } = this.state" description="Destructured assignment from this.state" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cndp" value="const { $END$ } = this.props" description="Destructured assignment from this.props" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ptu" value="$START$: PropTypes.$TYPE$,$END$" description="React: PropTypes. without required" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rslc" value="import React from 'react'&#10;import T from 'prop-types'&#10;import './$CLASSNAME$.scss'&#10;import { connect } from 'react-redux'&#10;&#10;const $COMPONENT$ = () =&gt; (&#10;  &lt;div className=&quot;$CLASSNAME$&quot;&gt;&#10;    $END$&#10;  &lt;/div&gt;&#10;)&#10;&#10;&#10;$COMPONENT$.propTypes = {}&#10;&#10;const mapStateToProps = (state) =&gt; ({&#10;  $PROP$: get$UP$(state),&#10;})&#10;&#10;export default connect(mapStateToProps)($COMPONENT$)&#10;" description="React: create React Stateless Component" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="false" />
    <variable name="PROP" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="UP" expression="capitalize(PROP)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="com" value="$BLOCK$" description="Component name" toReformat="false" toShortenFQNames="true">
    <variable name="BLOCK" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cnb" value="className=&quot;$BLOCK$__$END$&quot;" description="className" toReformat="false" toShortenFQNames="true">
    <variable name="BLOCK" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ex" value="export const $CONST$ = $END$" description="Export const" toReformat="false" toShortenFQNames="true">
    <variable name="CONST" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sto" value="state =&gt; ({ $END$ })" description="Arrow function that takes object and returns object" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rclc" value="import React, { Component } from 'react'&#10;import T from 'prop-types'&#10;import './$CLASSNAME$.scss'&#10;import { connect } from 'react-redux'&#10;&#10;const mapStateToProps = () =&gt; {&#10;  $PROP$&#10;}&#10;&#10;@connect(mapStateToProps)&#10;export default class $COMPONENT$ extends Component {&#10;  static propTypes = {&#10;&#10;  }&#10;  &#10;  render() {&#10;    return (&#10;      &lt;div className=&quot;$CLASSNAME$&quot;&gt;$END$&lt;/div&gt;&#10;    )&#10;  }&#10;}&#10;" description="React: Create a React ES2015 class" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="PROP" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ptsl" value="$COMP$.propTypes = { &#10;  $START$: T.object.$END$&#10;};&#10;" description="React: propTypes for stateless component" toReformat="false" toShortenFQNames="true">
    <variable name="COMP" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ptr" value="$START$: T.$TYPE$.isRequired," description="React: PropTypes.Required" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cn" value="className=&quot;$BLOCK$&quot;" description="className" toReformat="false" toShortenFQNames="true">
    <variable name="BLOCK" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="help" value="import helper from 'utils/bem-helper'&#10;const classes = helper('$COMP$')" description="React bem-helper" toReformat="false" toShortenFQNames="true">
    <variable name="COMP" expression="lowercaseAndDash(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rslcl" value="import React from react&#10;import T from 'prop-types'&#10;import './$CLASSNAME$.scss'&#10;import helper from 'utils/bem-helper'&#10;&#10;const classes = helper('$CLASSNAME$')&#10;&#10;const $COMPONENT$ = () =&gt; (&#10;  &lt;div {...classes()}&gt;&#10;    $END$&#10;  &lt;/div&gt;&#10;)&#10;&#10;&#10;$COMPONENT$.propTypes = {&#10;  &#10;}&#10;&#10;export default $COMPONENT$&#10;" description="React: create React Stateless Component" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="wcn" value="/* webpackChunkName: '$NAME$' */ $END$" description="Webpack chunk name magic comment" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rclsc" value="import React, { Component } from 'react'&#10;import T from 'prop-types'&#10;import './$CLASSNAME$.scss'&#10;import helper from 'utils/bem-helper'&#10;&#10;const classes = helper('$CLASSNAME$')&#10;&#10;export default class $COMPONENT$ extends Component {&#10;  static propTypes = {&#10;    &#10;  }&#10;  &#10;  render() {&#10;    return (&#10;      &lt;div {...classes()}&gt;$END$&lt;/div&gt;&#10;    )&#10;  }&#10;}&#10;" description="React: Create a React ES2015 class" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASSNAME" expression="lowercaseAndDash(COMPONENT)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="story" value="import React from 'react'&#10;import { storiesOf } from '@storybook/react'&#10;&#10;import $NAME$ from './$NAME$'&#10;&#10;storiesOf('$NAME$', module).add('$NAME$', () =&gt; (&#10;  &lt;$NAME$ /&gt;&#10;))" description="Storybook file" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="firstWord(spaceSeparated(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="edl" value="//eslint-disable-line" description="Eslint-disable-line" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ch" value="{...classes('$END$')}" description="Class helper" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="dp" value="$COMP$.defaultProps = {&#10;  $END$&#10;}" description="Default Props" toReformat="false" toShortenFQNames="true">
    <variable name="COMP" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>